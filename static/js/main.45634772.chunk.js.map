{"version":3,"sources":["component/Navbar.js","component/Textforms.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","htmlFor","Textforms","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","onChange","event","target","value","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.45634772.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> used to demonstrate router*/}    \r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={'/about'}>{props.aboutext}about</Link>\r\n          </li> */}\r\n          \r\n          \r\n        </ul>\r\n       <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\r\n        </div>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textforms(props) {\r\n\r\n    const handleupclick=()=>{\r\n        let newtext=text.toUpperCase()\r\n        setText(newtext)\r\n        // console.log(\"uppercase\"+text)\r\n        props.showAlert(\"uppercase\",\"success\")\r\n    }\r\n\r\n    const handledoclick=()=>{\r\n        let newtext=text.toLowerCase()\r\n        setText(newtext)\r\n        // console.log(\"uppercase\"+text)\r\n        props.showAlert(\"lowercase\",\"success\")\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"mybox\")\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"copied\",\"success\")\r\n    }\r\n\r\n    const handlespaces=()=>{\r\n        let newtext=text.split(/[ ]+/)\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"removedspaces\",\"success\")\r\n    }\r\n\r\n    const handleclclick=()=>{\r\n        let newtext=\"\"\r\n        setText(newtext)\r\n        props.showAlert(\"cleared\",\"success\")\r\n    }\r\n\r\n    const[text,setText]=useState('')\r\n    const handleupchange=(event)=>{\r\n        // console.log(\"uppercasechange\")\r\n        \r\n        setText(event.target.value)\r\n    }\r\n  return (\r\n      <>\r\n    <div className='container' style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n  <div className=\"mb-3\">\r\n\r\n    <textarea className=\"form-control\"  onChange={handleupchange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"mybox\" rows=\"8\"></textarea>\r\n  </div>\r\n  <button className='btn btn-primary mx-3' onClick={handleupclick}>uppercase</button>\r\n  <button className='btn btn-primary mx-3' onClick={handledoclick}>lowercase</button>\r\n  <button className='btn btn-primary mx-3' onClick={handleclclick}>clear</button>\r\n  <button className='btn btn-primary mx-3' onClick={handleCopy}>copy</button>\r\n  <button className='btn btn-primary mx-3' onClick={handlespaces}>handlespaces</button>\r\n  </div>\r\n  <div className='container my-3' style={{color:props.mode==='light'?'black':'white'}}>\r\n <h1>your text</h1>\r\n <p >{text.split(\" \").length} words and {text.length} characters</p>\r\n <p>{0.008*text.split(\" \").length} minutes to read</p>\r\n <h2>preview</h2>\r\n <p>{text.length>0?text:\"enter text in box\"}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   const capitalize =(word)=>{\r\n    const lower=word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n   }\r\n  return (\r\n    \r\n  props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n    \r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Alert","import './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport Textforms from './component/Textforms';\nimport React,{useState} from 'react';\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#00337e';\n      showAlert(\"dark mode\",\"success\");\n      document.title=\"text editor-dark\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode\",\"success\");\n      document.title=\"text editor-light\"\n    }}\n    \n\n    const showAlert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type:type,\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, (3000));\n   }\n  \n  return (\n    <>\n    \n   \n    {/* <Router> */}\n    \n      <Navbar title=\"textutils2\" mode={mode} togglemode={toggleMode} />\n      <Alert alert={alert}/>\n      \n      <div className=\"container\">\n      <Textforms heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\n          {/* <Routes>\n            <Route path=\"/About\" element={<About />}>\n            </Route> */}\n            {/* <Route path=\"/\" element={<Textforms heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n             </Route>\n          </Routes> */}\n        </div>\n     \n      {/* </Router> */}\n    </>\n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}